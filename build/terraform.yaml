#trigger: none

#pool:
 # vmImage: ubuntu-latest

# Don't run against PRs
#pr: none

#stages :
#- stage: validate
  jobs:
  - job: validate
    continueOnError: false
    steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: "Install"
      inputs:
           terraformVersion: 0.13.4
    - task: TerraformTaskV1@0
      displayName: 'init'
      inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: 'terraform-code'
          backendServiceArm: 'ARM'
          backendAzureRmResourceGroupName: 'ADO'
          backendAzureRmStorageAccountName: 'adostgnew'
          backendAzureRmContainerName: 'adocontain'
          backendAzureRmKey: 'terraform2'
  #- stage: plan
   # dependsOn: [validate]
    #condition: succeeded('validate')
    #jobs:
     #- job: terraform_plan_develop
      #steps:
      #- checkout: self
    #- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
     # displayName: "Install Terraform 0.13.4"
      #inputs:
       #       terraformVersion: 0.13.4
    - task: TerraformTaskV1@0
      displayName: 'plan'
      inputs:
            provider: 'azurerm'
            command: 'plan'
            workingDirectory: 'terraform-code'
            #backendServiceArm: 'ARM'
            #backendAzureRmResourceGroupName: 'ADO'
            #backendAzureRmStorageAccountName: 'adostgnew'
            #backendAzureRmContainerName: 'adocontain'
            #backendAzureRmKey: 'terraform1'
            environmentServiceNameAzureRM: 'ARM'
    #- task: TerraformTaskV1@0
     # inputs:
      #        provider: 'azurerm'
       #      command: 'plan'
        #      projects: '**/*.tf'
         #     environmentServiceNameAzureRM: 'ARM'
  #- stage: apply
   # dependsOn: [plan]
    #condition: succeeded('plan')
    #jobs:
    #- deployment: terraform_apply
    #  continueOnError: false
     # environment: 'PROD'
      #timeoutInMinutes: 120
    #- job: terraform_apply_develop
    #steps: 
    #- checkout:  self
    #- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    #  displayName: "Install Terraform 0.13.4"
     # inputs:
      #      terraformVersion: 0.13.4
    - task: TerraformTaskV1@0
      displayName: 'apply'
      inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: 'terraform-code'
            backendServiceArm: 'ARM'
            #backendAzureRmResourceGroupName: 'ADO'
            #backendAzureRmStorageAccountName: 'adostgnew'
            #backendAzureRmContainerName: 'adocontain'
            #backendAzureRmKey: 'terraform1'
            environmentServiceNameAzureRM: 'ARM'
    #- task: TerraformTaskV1@0
     # inputs:
      #        provider: 'azurerm'
       #       command: 'plan'
        #      environmentServiceNameAzureRM: 'ARM'
    #- task: TerraformTaskV2@2
     # inputs:
      #      provider: 'azurerm'
       #     command: 'apply'
        #    environmentServiceNameAzureRM: 'ARM'
